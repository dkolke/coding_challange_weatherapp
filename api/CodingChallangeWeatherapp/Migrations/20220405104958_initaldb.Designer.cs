// <auto-generated />
using System;
using CodingChallangeWeatherapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingChallangeWeatherapp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220405104958_initaldb")]
    partial class initaldb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Clouds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("All")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Clouds");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Coord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<float>("Lon")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Coord");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Feels_Like")
                        .HasColumnType("real");

                    b.Property<int?>("Grnd_Level")
                        .HasColumnType("int");

                    b.Property<short>("Humidity")
                        .HasColumnType("smallint");

                    b.Property<int?>("Pressure")
                        .HasColumnType("int");

                    b.Property<int?>("Sea_Level")
                        .HasColumnType("int");

                    b.Property<float>("Temp")
                        .HasColumnType("real");

                    b.Property<float>("Temp_Max")
                        .HasColumnType("real");

                    b.Property<float>("Temp_Min")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Main");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Rain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("One_Hour")
                        .HasColumnType("real");

                    b.Property<float>("Three_Hour")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Rain");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Snow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("One_Hour")
                        .HasColumnType("real");

                    b.Property<float>("Three_Hour")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Snow");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CloudsId")
                        .HasColumnType("int");

                    b.Property<int?>("CoordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MainId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RainId")
                        .HasColumnType("int");

                    b.Property<int?>("SnowId")
                        .HasColumnType("int");

                    b.Property<int>("Timezone")
                        .HasColumnType("int");

                    b.Property<float>("Visibility")
                        .HasColumnType("real");

                    b.Property<int?>("WeatherId")
                        .HasColumnType("int");

                    b.Property<int?>("WindId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CloudsId");

                    b.HasIndex("CoordId");

                    b.HasIndex("MainId");

                    b.HasIndex("RainId");

                    b.HasIndex("SnowId");

                    b.HasIndex("WeatherId");

                    b.HasIndex("WindId");

                    b.ToTable("WeatherData");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.Wind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("Deg")
                        .HasColumnType("smallint");

                    b.Property<float>("Gust")
                        .HasColumnType("real");

                    b.Property<float>("Speed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Wind");
                });

            modelBuilder.Entity("CodingChallangeWeatherapp.DBModels.WeatherData", b =>
                {
                    b.HasOne("CodingChallangeWeatherapp.DBModels.Clouds", "Clouds")
                        .WithMany()
                        .HasForeignKey("CloudsId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Coord", "Coord")
                        .WithMany()
                        .HasForeignKey("CoordId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Rain", "Rain")
                        .WithMany()
                        .HasForeignKey("RainId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Snow", "Snow")
                        .WithMany()
                        .HasForeignKey("SnowId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Weather", "Weather")
                        .WithMany()
                        .HasForeignKey("WeatherId");

                    b.HasOne("CodingChallangeWeatherapp.DBModels.Wind", "Wind")
                        .WithMany()
                        .HasForeignKey("WindId");

                    b.Navigation("Clouds");

                    b.Navigation("Coord");

                    b.Navigation("Main");

                    b.Navigation("Rain");

                    b.Navigation("Snow");

                    b.Navigation("Weather");

                    b.Navigation("Wind");
                });
#pragma warning restore 612, 618
        }
    }
}
